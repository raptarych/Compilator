P -> k DEFINE		k
P -> GETV v EQUATION		v
DEFINE -> v DEFINE_TRIGGER AFTERDEFINE		v
AFTERDEFINE -> GETV EQUATION		=
AFTERDEFINE -> ;		;
AFTERDEFINE -> , DEFINE		,
DEFINE_TRIGGER -> $		= , ;
EQUATION -> $		,
EQUATION -> = EXEC EQUATION_TRIGGER		=
EXEC -> ( EXEC ) RIGHTPART		(
EXEC -> c RIGHTPART		c
EXEC -> GETV v RIGHTPART		v
GETV -> $		v =
RIGHTPART -> + RIGHTPART ADD_TRIGGER		+
RIGHTPART -> - RIGHTPART SUB_TRIGGER		-
RIGHTPART -> * RIGHTPART_MULT		*
RIGHTPART -> / RIGHTPART_DIV		/
RIGHTPART_MULT -> c RIGHTPART_MULT 		c
RIGHTPART_MULT -> GETV v RIGHTPART_MULT		v
RIGHTPART_MULT -> + MULT_TRIGGER RIGHTPART ADD_TRIGGER		+
RIGHTPART_MULT -> - MULT_TRIGGER RIGHTPART SUB_TRIGGER		-
RIGHTPART_MULT -> MULT_TRIGGER RIGHTPART		* / ; ,
RIGHTPART_MULT -> ( EXEC ) MULT_TRIGGER RIGHTPART		(
RIGHTPART_DIV -> c RIGHTPART_DIV 		c
RIGHTPART_DIV -> GETV v RIGHTPART_DIV		v
RIGHTPART_DIV -> + DIV_TRIGGER RIGHTPART ADD_TRIGGER		+
RIGHTPART_DIV -> - DIV_TRIGGER RIGHTPART SUB_TRIGGER		-
ADD_TRIGGER -> $		) , ; c * / + -
SUB_TRIGGER -> $		) , ; c * / + -
MULT_TRIGGER -> $		) , ; c * / + -
DIV_TRIGGER -> $		) , ; c * / + -
RIGHTPART -> c RIGHTPART		c
RIGHTPART -> GETV v RIGHTPART		v
RIGHTPART -> EXEC		(
RIGHTPART -> $		) ; ,
EQUATION_TRIGGER -> ;		;
EQUATION_TRIGGER -> , DEFINE		,