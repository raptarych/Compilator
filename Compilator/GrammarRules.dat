P -> k DEFINE		k
P -> v EQUATION		v
DEFINE -> v DEFINE_TRIGGER AFTERDEFINE		v
AFTERDEFINE -> EQUATION		=
AFTERDEFINE -> ;		;
AFTERDEFINE -> , DEFINE		,
EQUATION -> $		,
EQUATION -> UNARYPP_TRIGGER ++ ;		++
EQUATION -> UNARYMM_TRIGGER -- ;		--
EQUATION -> = EXEC EQUATION_TRIGGER AFTEREXEC		=
EXEC -> ( EXEC ) RIGHTPART		(
EXEC -> LEFTPART RIGHTPART		c v
GET_TRIGGER -> $		+ - / * ; , c v ) ++ --
RIGHTPART -> + RIGHTPART ADD_TRIGGER		+
RIGHTPART -> - RIGHTPART SUB_TRIGGER		-
RIGHTPART -> * RIGHTPART_MULT		*
RIGHTPART -> / RIGHTPART_DIV		/
RIGHTPART -> ^ RIGHTPART_POW		^
RIGHTPART_POW -> LEFTPART RIGHTPART_POW		c v
RIGHTPART_POW -> + POW_TRIGGER RIGHTPART ADD_TRIGGER		+
RIGHTPART_POW -> - POW_TRIGGER RIGHTPART SUB_TRIGGER		-
RIGHTPART_POW -> POW_TRIGGER RIGHTPART		* / ; ,
RIGHTPART_POW -> ( EXEC ) POW_TRIGGER RIGHTPART		(
RIGHTPART_POW -> POW_TRIGGER		)
RIGHTPART_MULT -> LEFTPART RIGHTPART_MULT 		c v
RIGHTPART_MULT -> + MULT_TRIGGER RIGHTPART ADD_TRIGGER		+
RIGHTPART_MULT -> - MULT_TRIGGER RIGHTPART SUB_TRIGGER		-
RIGHTPART_MULT -> MULT_TRIGGER RIGHTPART		* / ; ,
RIGHTPART_MULT -> ( EXEC ) MULT_TRIGGER RIGHTPART		(
RIGHTPART_MULT -> MULT_TRIGGER		)
RIGHTPART_MULT -> ^ RIGHTPART_POW MULT_TRIGGER		^
RIGHTPART_DIV -> LEFTPART RIGHTPART_DIV 		c v
RIGHTPART_DIV -> + DIV_TRIGGER RIGHTPART ADD_TRIGGER		+
RIGHTPART_DIV -> - DIV_TRIGGER RIGHTPART SUB_TRIGGER		-
RIGHTPART_DIV -> DIV_TRIGGER RIGHTPART		* / ; ,
RIGHTPART_DIV -> ( EXEC ) DIV_TRIGGER RIGHTPART		(
RIGHTPART_DIV -> DIV_TRIGGER		)
RIGHTPART_DIV -> ^ RIGHTPART_POW DIV_TRIGGER		^
RIGHTPART -> EXEC		c v
LEFTPART -> c		c
LEFTPART -> v GET_TRIGGER		v
RIGHTPART -> EXEC		(
RIGHTPART -> $		) ; ,
AFTEREXEC -> REMOVE_IDENT_TRIGGER ;		;
AFTEREXEC -> , DEFINE		,